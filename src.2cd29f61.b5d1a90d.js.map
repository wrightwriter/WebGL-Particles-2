{"version":3,"sources":["src/index.js","src/m4.js","src/setGeometry.js","src/setColors.js","src/utils.js","src/vars.js","src/shaders.js"],"names":["document","m4","projection","width","height","depth","multiply","a","b","a00","a01","a02","a03","a10","a11","a12","a13","a20","a21","a22","a23","a30","a31","a32","a33","b00","b01","b02","b03","b10","b11","b12","b13","b20","b21","b22","b23","b30","b31","b32","b33","translation","tx","ty","tz","xRotation","angleInRadians","c","Math","cos","s","sin","yRotation","zRotation","scaling","sx","sy","sz","translate","m","xRotate","yRotate","zRotate","scale","orthographic","left","right","bottom","top","near","far","setGeometry","gl","bufferData","ARRAY_BUFFER","geometryF","STATIC_DRAW","Float32Array","setColors","Uint8Array","createProgram","shaders","opt_attribs","opt_locations","opt_errorCallback","errFn","error","program","forEach","shader","attachShader","attrib","ndx","bindAttribLocation","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","deleteProgram","msg","console","makeBuffer","attributeLocationName","size","type","normalize","stride","offset","data","positionAttributeLocation","getAttribLocation","pointsBuffer","createBuffer","enableVertexAttribArray","bindBuffer","vertexAttribPointer","attributeLocation","properties","createProgramFromSources","shaderSources","ii","length","push","loadShader","defaultShaderType","shaderSource","shaderType","createShader","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","deleteShader","computeShaderSource","NUM_PARTICLES","degToRad","d","PI","getMousePosition","e","pos","getNoPaddingNoBorderCanvasRelativeMousePosition","event","target","getRelativeMousePosition","rect","getBoundingClientRect","x","clientX","y","clientY","clientWidth","clientHeight","canvas","state","positionMouse","getElementById","innerHTML","window","addEventListener","main","getContext","antialias","programDrawParticles","webglUtils","vertexShaderSource","fragmentShaderSource","programDrawScreen","vertexShaderRectangleSource","fragmentShaderRectangleSource","computeShader","COMPUTE_SHADER","log","programCompute","ssbo","SHADER_STORAGE_BUFFER","DYNAMIC_COPY","bindBufferBase","texWidth","texHeight","currTex","createTexture","bindTexture","TEXTURE_2D","texImage2D","RGBA","UNSIGNED_BYTE","texParameteri","TEXTURE_MIN_FILTER","LINEAR","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","currentFrameBuffer","createFramebuffer","bindFramebuffer","FRAMEBUFFER","framebufferTexture2D","COLOR_ATTACHMENT0","drawnTex","drawnFrameBuffer","feedbackTex","COLOR_ATTACHMENT1","checkErorrs","ctx","getError","NO_ERROR","vaoScreenRectangle","createVertexArray","bindVertexArray","FLOAT","vaoP","getUniformLocation","matrixLocation","random","gravity","timePrevious","Date","getTime","timeNext","timeDelta","timeElapsed","timeStarted","mousePressed","avoidance","formula","index","formulaInput","querySelector","value","body","onmousedown","onmouseup","call","runCompute","setInterval","drawParticles","resizeCanvasToDisplaySize","viewport","enable","CULL_FACE","DEPTH_TEST","BLEND","blendFunc","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","clearColor","clear","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","matrix","useProgram","uniformMatrix4fv","uniform1i","uniform2fv","drawArrays","POINTS","drawScreen","ping","activeTexture","TEXTURE1","drawBuffers","TRIANGLE_STRIP","READ_FRAMEBUFFER","DRAW_FRAMEBUFFER","blitFramebuffer","NEAREST","webglLessonsUI","setupSlider","slide","ui","drawScene","max","uniform1f","dispatchCompute","memoryBarrier","SHADER_IMAGE_ACCESS_BARRIER_BIT"],"mappings":"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EjC,EACA,EACA,EACA,EACA,IACA,EACA,GACA,EACA,EACA,EACA,IACA,EACA,GACA,IACA,EACA,GACA,EACA,EAGA,GACA,EACA,EACA,GACA,GACA,EACA,IACA,EACA,EACA,GACA,GACA,EACA,IACA,GACA,EACA,IACA,EACA,EAGA,GACA,GACA,EACA,GACA,GACA,EACA,GACA,GACA,EACA,GACA,GACA,EACA,GACA,GACA,EACA,GACA,GACA,EAGA,EACA,EACA,GACA,GACA,EACA,GACA,EACA,IACA,GACA,EACA,IACA,GACA,GACA,EACA,GACA,GACA,IACA,GAGA,GACA,EACA,GACA,IACA,EACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,IACA,EACA,GACA,IACA,GACA,GAGA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GAGA,EACA,EACA,EACA,IACA,EACA,EACA,IACA,EACA,GACA,EACA,EACA,EACA,IACA,EACA,GACA,EACA,EACA,GAGA,IACA,EACA,EACA,IACA,GACA,EACA,IACA,GACA,GACA,IACA,EACA,EACA,IACA,GACA,GACA,IACA,EACA,GAGA,GACA,GACA,EACA,GACA,GACA,GACA,IACA,GACA,GACA,GACA,GACA,EACA,IACA,GACA,GACA,IACA,GACA,EAGA,GACA,GACA,EACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,EACA,GACA,GACA,EACA,GACA,GACA,GAGA,GACA,GACA,EACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,EACA,GACA,GACA,EACA,GACA,GACA,GAGA,GACA,GACA,EACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,EACA,GACA,GACA,EACA,GACA,GACA,GAGA,GACA,GACA,EACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,EACA,GACA,GACA,GACA,GACA,GACA,EAGA,GACA,GACA,EACA,GACA,IACA,GACA,GACA,GACA,GACA,GACA,GACA,EACA,GACA,IACA,EACA,GACA,IACA,GAGA,EACA,IACA,EACA,EACA,IACA,GACA,GACA,IACA,GACA,EACA,IACA,EACA,GACA,IACA,GACA,GACA,IACA,EAGA,EACA,EACA,EACA,EACA,EACA,GACA,EACA,IACA,GACA,EACA,EACA,EACA,EACA,IACA,GACA,EACA,IACA,IAKD,EAAA,UAAA,GFhTD7E,IAAAA,KAAAA,CAAAA,SAAAA,EAAAA,EAAAA,GG+SC,aAAA,OAAA,eAAA,EAAA,aAAA,CAAA,OAAA,IAAA,EAAA,UAtUQ8E,SAAUN,GACjBA,EAAGC,WACDD,EAAGE,aACH,IAAIK,WAAW,CAAA,IAGb,GACA,IACA,IACA,GACA,IACA,IACA,GACA,IACA,IACA,GACA,IACA,IACA,GACA,IACA,IACA,GACA,IAnBa,IAuBb,GACA,IACA,IACA,GACA,IACA,IACA,GACA,IACA,IACA,GACA,IACA,IACA,GACA,IACA,IACA,GACA,IAvCa,IA2Cb,GACA,IACA,IACA,GACA,IACA,IACA,GACA,IACA,IACA,GACA,IACA,IACA,GACA,IACA,IACA,GACA,IA3Da,GA+Db,GACA,IACA,GACA,GACA,IACA,GACA,GACA,IACA,GACA,GACA,IACA,GACA,GACA,IACA,GACA,GACA,IA/Ea,GAmFb,GACA,IACA,GACA,GACA,IACA,GACA,GACA,IACA,GACA,GACA,IACA,GACA,GACA,IACA,GACA,GACA,IAnGa,GAuGb,GACA,IACA,GACA,GACA,IACA,GACA,GACA,IACA,GACA,GACA,IACA,GACA,GACA,IACA,GACA,GACA,IAvHa,GA2Hb,IACA,IACA,GACA,IACA,IACA,GACA,IACA,IACA,GACA,IACA,IACA,GACA,IACA,IACA,GACA,IACA,IA3Ia,IA+Ib,IACA,GACA,IACA,IACA,GACA,IACA,IACA,GACA,IACA,IACA,GACA,IACA,IACA,GACA,IACA,IACA,GA/Ja,IAmKb,IACA,GACA,IACA,IACA,GACA,IACA,IACA,GACA,IACA,IACA,GACA,IACA,IACA,GACA,IACA,IACA,GAnLa,IAuLb,IACA,GACA,IACA,IACA,GACA,IACA,IACA,GACA,IACA,IACA,GACA,IACA,IACA,GACA,IACA,IACA,GAvMa,GA2Mb,IACA,IACA,GACA,IACA,IACA,GACA,IACA,IACA,GACA,IACA,IACA,GACA,IACA,IACA,GACA,IACA,IA3Na,IA+Nb,GACA,IACA,IACA,GACA,IACA,IACA,GACA,IACA,IACA,GACA,IACA,IACA,GACA,IACA,IACA,GACA,IA/Oa,GAmPb,IACA,IACA,GACA,IACA,IACA,GACA,IACA,IACA,GACA,IACA,IACA,GACA,IACA,IACA,GACA,IACA,IAnQa,IAuQb,IACA,GACA,IACA,IACA,GACA,IACA,IACA,GACA,IACA,IACA,GACA,IACA,IACA,GACA,IACA,IACA,GAvRa,GA2Rb,IACA,IACA,GACA,IACA,IACA,GACA,IACA,IACA,GACA,IACA,IACA,GACA,IACA,IACA,GACA,IACA,IA3Sa,IA+Sb,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,MAEFP,EAAGI,eH7SP5E,IAAAA,KAAAA,CAAAA,SAAAA,EAAAA,EAAAA,GIyFG,aAAA,SAAA,EAAA,GAAA,OAAA,SAAA,GAAA,GAAA,MAAA,QAAA,GAAA,CAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,EAAA,QAAA,EAAA,EAAA,OAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,GAAA,CAAA,IAAA,SAAA,GAAA,GAAA,OAAA,YAAA,OAAA,IAAA,uBAAA,OAAA,UAAA,SAAA,KAAA,GAAA,OAAA,MAAA,KAAA,GAAA,CAAA,IAAA,WAAA,MAAA,IAAA,UAAA,mDAAA,GAhHagF,SAAAA,EACdR,EAAIS,EAASC,EAAaC,EAAeC,GACrCC,IAAAA,EAAQD,GAAqBE,EAC7BC,EAAUf,EAAGQ,gBACnBC,OAAAA,EAAQO,QAAQ,SAASC,GACvBjB,EAAGkB,aAAaH,EAASE,KAEvBP,GACFA,EAAYM,QAAQ,SAASG,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","file":"src.2cd29f61.b5d1a90d.js","sourceRoot":"..","sourcesContent":["import \"./styles.css\";\r\nimport { m4 } from \"./m4.js\";\r\nimport { setGeometry, geometryF } from \"./setGeometry\";\r\nimport { setColors } from \"./setColors\";\r\nimport { makeBuffer } from \"./utils\";\r\nimport { NUM_PARTICLES } from \"./vars\";\r\nimport {\r\n  vertexShaderSource,\r\n  fragmentShaderSource,\r\n  vertexShaderRectangleSource,\r\n  fragmentShaderRectangleSource,\r\n  computeShaderSource\r\n} from \"./shaders.js\";\r\nfunction radToDeg(r) {\r\n  return (r * 180) / Math.PI;\r\n}\r\nfunction degToRad(d) {\r\n  return (d * Math.PI) / 180;\r\n}\r\n\r\n(\"use strict\");\r\n// You can either biond VAO or Buffer\r\n\r\ndocument.getElementById(\"app\").innerHTML = `<h1>Hello Vanilla!</h1>`;\r\n\r\n\r\n\r\nfunction main() {\r\n  // Get A WebGL context\r\nfunction checkErorrs(gl,ctx){\r\n  const e = gl.getError()\r\n  if (e !== gl.NO_ERROR){\r\n    console.log(\"ERROR: \" + ctx)\r\n    console.log(e)\r\n  }\r\n\r\n}\r\n  /** @type {HTMLCanvasElement} */\r\n  const canvas = document.getElementById(\"canvas\");\r\n  const WIDTH = canvas.width\r\n  const HEIGHT = canvas.height\r\n\r\n  const gl = canvas.getContext(\"webgl2-compute\", {antialias: false});\r\n\r\n  this.gl = gl\r\n  if (!gl) {\r\n    return;\r\n  }\r\n\r\n  // ----------- SHADERS ----------- //\r\n\r\n  const programDrawParticles = webglUtils.createProgramFromSources(gl, [\r\n    vertexShaderSource,\r\n    fragmentShaderSource\r\n  ]);\r\n  const programDrawScreen = webglUtils.createProgramFromSources(gl, [\r\n    vertexShaderRectangleSource,\r\n    fragmentShaderRectangleSource\r\n  ]);\r\n  \r\n  const computeShader = gl.createShader(gl.COMPUTE_SHADER);\r\n  gl.shaderSource(computeShader, computeShaderSource);\r\n  gl.compileShader(computeShader);\r\n\r\n  if (!gl.getShaderParameter(computeShader, gl.COMPILE_STATUS)) {\r\n    console.log(gl.getShaderInfoLog(computeShader));\r\n    console.log(\"error compiling shader\")\r\n    // return null;\r\n  }\r\n\r\n  const programCompute = gl.createProgram()\r\n  gl.attachShader(programCompute, computeShader)\r\n  gl.linkProgram(programCompute)\r\n\r\n  if (!gl.getProgramParameter(programCompute,gl.LINK_STATUS)){\r\n    console.log(\"error linking shader\")\r\n  }\r\n\r\n\r\n  \r\n  \r\n  // ----------- BUFFERS ----------- //\r\n\r\n  // SSBO\r\n  const ssbo = gl.createBuffer()\r\n\r\n  gl.bindBuffer(gl.SHADER_STORAGE_BUFFER, ssbo)\r\n  gl.bufferData(gl.SHADER_STORAGE_BUFFER, new Float32Array(NUM_PARTICLES*6), gl.DYNAMIC_COPY)\r\n  gl.bindBufferBase(gl.SHADER_STORAGE_BUFFER, 0, ssbo)\r\n\r\n  // Current texture\r\n  const texWidth = gl.canvas.clientWidth\r\n  const texHeight = gl.canvas.clientHeight\r\n  const currTex = gl.createTexture()\r\n  gl.bindTexture(gl.TEXTURE_2D, currTex)\r\n  \r\n  {\r\n    const data = null;\r\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, texWidth, texHeight, 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\r\n    \r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\r\n  }\r\n  \r\n  const currentFrameBuffer = gl.createFramebuffer()\r\n  gl.bindFramebuffer(gl.FRAMEBUFFER, currentFrameBuffer)\r\n  gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, currTex, 0)\r\n  \r\n  // Draw texture\r\n  const drawnTex = gl.createTexture();\r\n  gl.bindTexture(gl.TEXTURE_2D, drawnTex)\r\n  {\r\n    const data = null;\r\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, texWidth, texHeight, 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\r\n    \r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\r\n  }\r\n  \r\n  const drawnFrameBuffer = gl.createFramebuffer()\r\n  gl.bindFramebuffer(gl.FRAMEBUFFER, drawnFrameBuffer)\r\n  gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, drawnTex, 0)\r\n\r\n  // Feedback texture\r\n  const feedbackTex = gl.createTexture();\r\n  gl.bindTexture(gl.TEXTURE_2D, feedbackTex)\r\n  {\r\n    const data = null;\r\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, texWidth, texHeight, 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\r\n    \r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\r\n  }\r\n  \r\n  gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT1, gl.TEXTURE_2D, feedbackTex, 0)\r\n\r\n\r\n  // const drawnFrameBufferFeedback = gl.createFramebuffer()\r\n  // gl.bindFramebuffer(gl.FRAMEBUFFER, drawnFrameBufferFeedback)\r\n  // gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, feedbackTex, 0)\r\n  \r\n\r\n  \r\n  // gl.activeTexture(gl.TEXTURE1)\r\n  // gl.bindTexture(gl.TEXTURE_2D, texture)\r\n  // gl.bindImageTexture(0, texture, 0, false, 0, gl.READ_ONLY, gl.RGBA8) // bind for writing\r\n\r\n\r\n  \r\n  checkErorrs(gl, \"SSBO problem\")\r\n  var vaoScreenRectangle = gl.createVertexArray()\r\n  gl.bindVertexArray(vaoScreenRectangle)\r\n\r\n  const rectangleBuffer = makeBuffer(\r\n    gl,\r\n    \"a_position\",\r\n    programDrawScreen,\r\n    4,\r\n    gl.FLOAT,\r\n    false,\r\n    4*4,\r\n    0,\r\n    new Float32Array([\r\n      0, gl.canvas.clientHeight, 0, 1.,\r\n      gl.canvas.clientWidth, gl.canvas.clientHeight, 1, 1,\r\n      0,0,1,1,\r\n      gl.canvas.clientWidth, 0, 1,1,\r\n    ])\r\n  )\r\n\r\n  \r\n  var vaoP = gl.createVertexArray();\r\n  gl.bindVertexArray(vaoP);\r\n  \r\n  const pBuffer = makeBuffer(\r\n    gl,\r\n    \"a_position\",\r\n    programDrawParticles,\r\n    1,\r\n    gl.FLOAT,\r\n    false,\r\n    0,\r\n    0,\r\n    new Float32Array(NUM_PARTICLES)\r\n    );\r\n  // ----------- ATTRIBUTES ----------- //\r\n\r\n  // var positionAttributeLocation = gl.getAttribLocation(program, \"a_position\");\r\n  // var pointsAttributeLocation = gl.getAttribLocation(program, \"a_points\");\r\n\r\n  var colorLocation = gl.getUniformLocation(programDrawParticles, \"u_color\");\r\n  var matrixLocation = gl.getUniformLocation(programDrawParticles, \"u_matrix\");\r\n  var fudgeLocation = gl.getUniformLocation(programDrawParticles, \"u_fudgeFactor\");\r\n  var colorAttributeLocation = gl.getAttribLocation(programDrawParticles, \"a_color\");\r\n\r\n  // ----------- SETUP ----------- //\r\n  var translation = [0, 0, 0];\r\n  var rotation = [degToRad(0), degToRad(0), degToRad(0)];\r\n  var scale = [1, 1, 1];\r\n  var color = [Math.random(), Math.random(), Math.random(), 1];\r\n\r\n  this.state = {\r\n    gravity: {\r\n      x : 0.,\r\n      y : 0.\r\n    },\r\n    timePrevious: new Date().getTime(),\r\n    timeNext : this.timePrevious,\r\n    timeDelta : 0,\r\n    timeElapsed : 0,\r\n    timeStarted : this.timePrevious,\r\n    positionMouse : {x: 0, y:0},\r\n    mousePressed : 0,\r\n    avoidance : 0,\r\n    formula : \"vec2(sin(frId + u_timeElapsed*0.001), cos(frId + u_timeElapsed*0.001))\",\r\n  }\r\n  const formulaInput = document.querySelector(\"#formula\")\r\n  formulaInput.addEventListener(\"oninput\", e => {\r\n    formulaInput.innerHTML = e.target.value\r\n    this.state.formula = e.target.value\r\n    gl.shaderSource(computeShader, computeShaderSource);\r\n    gl.compileShader(computeShader);\r\n  })\r\n\r\n  document.body.onmousedown = e => {\r\n    this.state.mousePressed = 1\r\n  }\r\n  document.body.onmouseup = e => {\r\n    this.state.mousePressed = 0\r\n  }\r\n  window.addEventListener('mousemove', e => {\r\n    getMousePosition.call(this, e)\r\n  })\r\n\r\n\r\n\r\n  runCompute.call(this) \r\n\r\n  // const result = new Float32Array(NUM_PARTICLES)\r\n  // gl.getBufferSubData(gl.SHADER_STORAGE_BUFFER, 0, result)\r\n  // console.log(result)\r\n\r\n  setInterval(()=>{\r\n    runCompute.call(this)\r\n    drawParticles.call(this)\r\n    drawScreen.call(this)\r\n    this.state.timeNext = new Date().getTime()\r\n    this.state.timeDelta = this.state.timeNext - this.state.timePrevious\r\n    this.state.timeElapsed += this.state.timeDelta\r\n    this.state.timePrevious = this.state.timeNext\r\n  }, 1)\r\n\r\n  webglLessonsUI.setupSlider(\"#x\", {\r\n    value: translation[0],\r\n    slide: updatePosition(0),\r\n    max: gl.canvas.width\r\n  });\r\n  webglLessonsUI.setupSlider(\"#gravity-x\", {\r\n    value: 500,\r\n    slide: (e, ui) => {this.state.gravity.x = ui.value/1000 - 0.5},\r\n    max: 1000\r\n  });\r\n  webglLessonsUI.setupSlider(\"#gravity-y\", {\r\n    value: 500,\r\n    slide: (e, ui) => {this.state.gravity.y = ui.value/1000 - 0.5},\r\n    max: 1000\r\n  });\r\n  webglLessonsUI.setupSlider(\"#avoidance\", {\r\n    value: 0,\r\n    slide: (e, ui) => {this.state.avoidance = ui.value/1000},\r\n    max: 1000\r\n  });\r\n\r\n  function updatePosition(index) {\r\n    return function(event, ui) {\r\n      translation[index] = ui.value;\r\n      drawScene();\r\n    };\r\n  }\r\n  // ----------- RUN ----------- //\r\n\r\n  function runCompute () {\r\n    gl.useProgram(programCompute)\r\n    gl.uniform2fv(gl.getUniformLocation(programCompute, \"u_resolution\"), new Float32Array([gl.canvas.clientWidth, gl.canvas.clientHeight]));\r\n    gl.uniform2fv(gl.getUniformLocation(programCompute, \"u_positionMouse\"), new Float32Array([this.state.positionMouse.x, this.state.positionMouse.y]));\r\n    gl.uniform2fv(gl.getUniformLocation(programCompute, \"u_gravity\"), new Float32Array([this.state.gravity.x, this.state.gravity.y]));\r\n    gl.uniform1f(gl.getUniformLocation(programCompute, \"u_avoidance\"),  this.state.avoidance);\r\n    gl.uniform1f(gl.getUniformLocation(programCompute, \"u_mousePressed\"), this.state.mousePressed);\r\n    gl.uniform1i(gl.getUniformLocation(programCompute, \"u_particleCount\"), NUM_PARTICLES);\r\n    gl.uniform1f(gl.getUniformLocation(programCompute, \"u_timeElapsed\"), this.state.timeElapsed);\r\n    gl.dispatchCompute(NUM_PARTICLES, 1,1)\r\n    gl.memoryBarrier(gl.SHADER_IMAGE_ACCESS_BARRIER_BIT)\r\n  }\r\n  let ping = 1\r\n  function drawScreen() {\r\n    // webglUtils.resizeCanvasToDisplaySize(gl.canvas);\r\n\r\n    gl.bindFramebuffer(gl.FRAMEBUFFER, drawnFrameBuffer)\r\n    gl.viewport(0, 0, gl.canvas.clientWidth, gl.canvas.clientHeight);\r\n    gl.clearColor(0, 0, 0, 1);\r\n    gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\r\n\r\n    gl.bindVertexArray(vaoScreenRectangle);\r\n\r\n    const left = 0;\r\n    const right = gl.canvas.clientWidth;\r\n    const bottom = gl.canvas.clientHeight;\r\n    const top = 0;\r\n    const near = 400;\r\n    const far = -400;\r\n    let matrix = m4.orthographic(left, right, bottom, top, near, far);\r\n\r\n    if (ping === 1) {\r\n      gl.activeTexture(gl.TEXTURE1)\r\n      gl.bindTexture(gl.TEXTURE_2D,drawnTex)\r\n      gl.drawBuffers([gl.COLOR_ATTACHMENT1])\r\n    } else {\r\n      gl.activeTexture(gl.TEXTURE1)\r\n      gl.bindTexture(gl.TEXTURE_2D,feedbackTex)\r\n      gl.drawBuffers([gl.COLOR_ATTACHMENT0])\r\n    }\r\n\r\n    gl.useProgram(programDrawScreen)\r\n    gl.uniform1i(gl.getUniformLocation(programDrawParticles, \"u_currFrame\"), 0) // bind texture 0 \r\n    gl.uniform1i(gl.getUniformLocation(programDrawParticles, \"u_previousFrame\"), 1) // bind texture 0 \r\n    // gl.uniform1i(gl.getUniformLocation(programDrawParticles, \"u_distTex\"), 0) // bind texture 0 \r\n    gl.uniformMatrix4fv(gl.getUniformLocation(programDrawScreen, \"u_matrix\"), false, matrix);\r\n    // gl.uniform1i(gl.getUniformLocation(programDrawParticles, \"u_particleId\"), i);\r\n    gl.uniform1i(gl.getUniformLocation(programDrawScreen, \"u_particleCount\"), NUM_PARTICLES);\r\n    gl.uniform2fv(gl.getUniformLocation(programDrawScreen, \"u_resolution\"), new Float32Array([gl.canvas.clientWidth, gl.canvas.clientHeight]));\r\n    gl.uniform2fv(gl.getUniformLocation(programDrawScreen, \"u_positionMouse\"), new Float32Array([this.state.positionMouse.x, this.state.positionMouse.y]));\r\n    \r\n    gl.drawArrays(gl.TRIANGLE_STRIP, 0, 20);\r\n\r\n\r\n    gl.bindFramebuffer(gl.READ_FRAMEBUFFER, currentFrameBuffer)\r\n    gl.bindFramebuffer(gl.DRAW_FRAMEBUFFER, null)\r\n    \r\n    gl.blitFramebuffer(\r\n      0, 0, gl.canvas.clientWidth, gl.canvas.clientHeight,\r\n      0, 0, gl.canvas.clientWidth, gl.canvas.clientHeight,\r\n      gl.COLOR_BUFFER_BIT, gl.NEAREST);\r\n\r\n    ping = 1 - ping\r\n    gl.bindFramebuffer(gl.FRAMEBUFFER, null)\r\n\r\n  }\r\n  function drawParticles() {\r\n    \r\n    webglUtils.resizeCanvasToDisplaySize(gl.canvas);\r\n    gl.bindFramebuffer(gl.FRAMEBUFFER, currentFrameBuffer)\r\n\r\n    gl.viewport(0, 0, gl.canvas.clientWidth, gl.canvas.clientHeight);\r\n    gl.enable(gl.CULL_FACE);\r\n    gl.enable(gl.DEPTH_TEST);\r\n    gl.enable(gl.BLEND);\r\n    gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);\r\n\r\n    gl.clearColor(0, 0, 0, 1);\r\n    gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\r\n\r\n    gl.bindVertexArray(vaoP);\r\n\r\n    const left = 0;\r\n    const right = gl.canvas.clientWidth;\r\n    const bottom = gl.canvas.clientHeight;\r\n    const top = 0;\r\n    const near = 400;\r\n    const far = -400;\r\n    let matrix = m4.orthographic(left, right, bottom, top, near, far);\r\n\r\n    gl.bindBuffer(gl.ARRAY_BUFFER, ssbo) // may be able to move these out of the drawParticles() function\r\n    gl.vertexAttribPointer(0,3,gl.FLOAT, false, 2*4,0)\r\n    gl.enableVertexAttribArray(0)\r\n    gl.vertexAttribPointer(1,3,gl.FLOAT, false, 2*4,NUM_PARTICLES*1*4)\r\n    gl.enableVertexAttribArray(1)\r\n\r\n    \r\n    // for (let i = 0; i < NUM_PARTICLES; i++) {\r\n      gl.useProgram(programDrawParticles)\r\n      // gl.uniform1i(gl.getUniformLocation(programDrawParticles, \"u_distTex\"), 0) // bind texture 0 \r\n      gl.uniformMatrix4fv(matrixLocation, false, matrix);\r\n      // gl.uniform1i(gl.getUniformLocation(programDrawParticles, \"u_particleId\"), i);\r\n      gl.uniform1i(gl.getUniformLocation(programDrawParticles, \"u_particleCount\"), NUM_PARTICLES);\r\n      gl.uniform2fv(gl.getUniformLocation(programDrawParticles, \"u_resolution\"), new Float32Array([gl.canvas.clientWidth, gl.canvas.clientHeight]));\r\n      gl.uniform2fv(gl.getUniformLocation(programDrawParticles, \"u_positionMouse\"), new Float32Array([this.state.positionMouse.x, this.state.positionMouse.y]));\r\n      \r\n      gl.drawArrays(gl.POINTS, 0, NUM_PARTICLES);\r\n\r\n    // } \r\n    // gl.blitFramebuffer(\r\n    //   0, 0, WIDTH, HEIGHT,\r\n    //   0, 0, WIDTH, HEIGHT,\r\n    //   gl.COLOR_BUFFER_BIT, gl.NEAREST);\r\n\r\n  }\r\n}\r\n\r\n\r\nfunction getRelativeMousePosition(event, target) {\r\n  target = target || event.target;\r\n  var rect = target.getBoundingClientRect();\r\n\r\n  return {\r\n    x: event.clientX - rect.left,\r\n    y: event.clientY - rect.top,\r\n  }\r\n}\r\n\r\nfunction getMousePosition(e) {\r\n  const pos = getNoPaddingNoBorderCanvasRelativeMousePosition(e, this.gl.canvas);\r\n\r\n  // pos is in pixel coordinates for the canvas.\r\n  // so convert to WebGL clip space coordinates\r\n  const x = pos.x / this.gl.canvas.width  *  2 - 1;\r\n  const y = pos.y / this.gl.canvas.height * -2 + 1;\r\n\r\n\r\n  this.state.positionMouse = {\r\n    x: x,\r\n    y: y\r\n  }\r\n}\r\n// assumes target or event.target is canvas\r\nfunction getNoPaddingNoBorderCanvasRelativeMousePosition(event, target) {\r\n  target = target || event.target;\r\n  var pos = getRelativeMousePosition(event, target);\r\n\r\n  pos.x = pos.x * target.width  / target.clientWidth;\r\n  pos.y = pos.y * target.height / target.clientHeight;\r\n\r\n  return pos;  \r\n}\r\n\r\nfunction setupCompute () {\r\n\r\n}\r\nwindow.addEventListener('DOMContentLoaded', main)\r\n// main();\r\n","var m4 = {\r\n  projection: function(width, height, depth) {\r\n    // Note: This matrix flips the Y axis so 0 is at the top.\r\n    return [\r\n      2 / width,\r\n      0,\r\n      0,\r\n      0,\r\n      0,\r\n      -2 / height,\r\n      0,\r\n      0,\r\n      0,\r\n      0,\r\n      2 / depth,\r\n      0,\r\n      -1,\r\n      1,\r\n      0,\r\n      1\r\n    ];\r\n  },\r\n\r\n  multiply: function(a, b) {\r\n    var a00 = a[0 * 4 + 0];\r\n    var a01 = a[0 * 4 + 1];\r\n    var a02 = a[0 * 4 + 2];\r\n    var a03 = a[0 * 4 + 3];\r\n    var a10 = a[1 * 4 + 0];\r\n    var a11 = a[1 * 4 + 1];\r\n    var a12 = a[1 * 4 + 2];\r\n    var a13 = a[1 * 4 + 3];\r\n    var a20 = a[2 * 4 + 0];\r\n    var a21 = a[2 * 4 + 1];\r\n    var a22 = a[2 * 4 + 2];\r\n    var a23 = a[2 * 4 + 3];\r\n    var a30 = a[3 * 4 + 0];\r\n    var a31 = a[3 * 4 + 1];\r\n    var a32 = a[3 * 4 + 2];\r\n    var a33 = a[3 * 4 + 3];\r\n    var b00 = b[0 * 4 + 0];\r\n    var b01 = b[0 * 4 + 1];\r\n    var b02 = b[0 * 4 + 2];\r\n    var b03 = b[0 * 4 + 3];\r\n    var b10 = b[1 * 4 + 0];\r\n    var b11 = b[1 * 4 + 1];\r\n    var b12 = b[1 * 4 + 2];\r\n    var b13 = b[1 * 4 + 3];\r\n    var b20 = b[2 * 4 + 0];\r\n    var b21 = b[2 * 4 + 1];\r\n    var b22 = b[2 * 4 + 2];\r\n    var b23 = b[2 * 4 + 3];\r\n    var b30 = b[3 * 4 + 0];\r\n    var b31 = b[3 * 4 + 1];\r\n    var b32 = b[3 * 4 + 2];\r\n    var b33 = b[3 * 4 + 3];\r\n    return [\r\n      b00 * a00 + b01 * a10 + b02 * a20 + b03 * a30,\r\n      b00 * a01 + b01 * a11 + b02 * a21 + b03 * a31,\r\n      b00 * a02 + b01 * a12 + b02 * a22 + b03 * a32,\r\n      b00 * a03 + b01 * a13 + b02 * a23 + b03 * a33,\r\n      b10 * a00 + b11 * a10 + b12 * a20 + b13 * a30,\r\n      b10 * a01 + b11 * a11 + b12 * a21 + b13 * a31,\r\n      b10 * a02 + b11 * a12 + b12 * a22 + b13 * a32,\r\n      b10 * a03 + b11 * a13 + b12 * a23 + b13 * a33,\r\n      b20 * a00 + b21 * a10 + b22 * a20 + b23 * a30,\r\n      b20 * a01 + b21 * a11 + b22 * a21 + b23 * a31,\r\n      b20 * a02 + b21 * a12 + b22 * a22 + b23 * a32,\r\n      b20 * a03 + b21 * a13 + b22 * a23 + b23 * a33,\r\n      b30 * a00 + b31 * a10 + b32 * a20 + b33 * a30,\r\n      b30 * a01 + b31 * a11 + b32 * a21 + b33 * a31,\r\n      b30 * a02 + b31 * a12 + b32 * a22 + b33 * a32,\r\n      b30 * a03 + b31 * a13 + b32 * a23 + b33 * a33\r\n    ];\r\n  },\r\n\r\n  translation: function(tx, ty, tz) {\r\n    return [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, tx, ty, tz, 1];\r\n  },\r\n\r\n  xRotation: function(angleInRadians) {\r\n    var c = Math.cos(angleInRadians);\r\n    var s = Math.sin(angleInRadians);\r\n\r\n    return [1, 0, 0, 0, 0, c, s, 0, 0, -s, c, 0, 0, 0, 0, 1];\r\n  },\r\n\r\n  yRotation: function(angleInRadians) {\r\n    var c = Math.cos(angleInRadians);\r\n    var s = Math.sin(angleInRadians);\r\n\r\n    return [c, 0, -s, 0, 0, 1, 0, 0, s, 0, c, 0, 0, 0, 0, 1];\r\n  },\r\n\r\n  zRotation: function(angleInRadians) {\r\n    var c = Math.cos(angleInRadians);\r\n    var s = Math.sin(angleInRadians);\r\n\r\n    return [c, s, 0, 0, -s, c, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\r\n  },\r\n\r\n  scaling: function(sx, sy, sz) {\r\n    return [sx, 0, 0, 0, 0, sy, 0, 0, 0, 0, sz, 0, 0, 0, 0, 1];\r\n  },\r\n\r\n  translate: function(m, tx, ty, tz) {\r\n    return m4.multiply(m, m4.translation(tx, ty, tz));\r\n  },\r\n\r\n  xRotate: function(m, angleInRadians) {\r\n    return m4.multiply(m, m4.xRotation(angleInRadians));\r\n  },\r\n\r\n  yRotate: function(m, angleInRadians) {\r\n    return m4.multiply(m, m4.yRotation(angleInRadians));\r\n  },\r\n\r\n  zRotate: function(m, angleInRadians) {\r\n    return m4.multiply(m, m4.zRotation(angleInRadians));\r\n  },\r\n\r\n  scale: function(m, sx, sy, sz) {\r\n    return m4.multiply(m, m4.scaling(sx, sy, sz));\r\n  },\r\n  orthographic: function(left, right, bottom, top, near, far) {\r\n    return [\r\n      2 / (right - left),\r\n      0,\r\n      0,\r\n      0,\r\n      0,\r\n      2 / (top - bottom),\r\n      0,\r\n      0,\r\n      0,\r\n      0,\r\n      2 / (near - far),\r\n      0,\r\n\r\n      (left + right) / (left - right),\r\n      (bottom + top) / (bottom - top),\r\n      (near + far) / (near - far),\r\n      1\r\n    ];\r\n  }\r\n};\r\nexport { m4 };\r\n","// Fill the current ARRAY_BUFFER buffer\r\n// with the values that define a letter 'F'.\r\n\r\nconst geometryF = new Float32Array([\r\n  // left column front\r\n  0,\r\n  0,\r\n  0,\r\n  0,\r\n  150,\r\n  0,\r\n  30,\r\n  0,\r\n  0,\r\n  0,\r\n  150,\r\n  0,\r\n  30,\r\n  150,\r\n  0,\r\n  30,\r\n  0,\r\n  0,\r\n\r\n  // top rung front\r\n  30,\r\n  0,\r\n  0,\r\n  30,\r\n  30,\r\n  0,\r\n  100,\r\n  0,\r\n  0,\r\n  30,\r\n  30,\r\n  0,\r\n  100,\r\n  30,\r\n  0,\r\n  100,\r\n  0,\r\n  0,\r\n\r\n  // middle rung front\r\n  30,\r\n  60,\r\n  0,\r\n  30,\r\n  90,\r\n  0,\r\n  67,\r\n  60,\r\n  0,\r\n  30,\r\n  90,\r\n  0,\r\n  67,\r\n  90,\r\n  0,\r\n  67,\r\n  60,\r\n  0,\r\n\r\n  // left column back\r\n  0,\r\n  0,\r\n  30,\r\n  30,\r\n  0,\r\n  30,\r\n  0,\r\n  150,\r\n  30,\r\n  0,\r\n  150,\r\n  30,\r\n  30,\r\n  0,\r\n  30,\r\n  30,\r\n  150,\r\n  30,\r\n\r\n  // top rung back\r\n  30,\r\n  0,\r\n  30,\r\n  100,\r\n  0,\r\n  30,\r\n  30,\r\n  30,\r\n  30,\r\n  30,\r\n  30,\r\n  30,\r\n  100,\r\n  0,\r\n  30,\r\n  100,\r\n  30,\r\n  30,\r\n\r\n  // middle rung back\r\n  30,\r\n  60,\r\n  30,\r\n  67,\r\n  60,\r\n  30,\r\n  30,\r\n  90,\r\n  30,\r\n  30,\r\n  90,\r\n  30,\r\n  67,\r\n  60,\r\n  30,\r\n  67,\r\n  90,\r\n  30,\r\n\r\n  // top\r\n  0,\r\n  0,\r\n  0,\r\n  100,\r\n  0,\r\n  0,\r\n  100,\r\n  0,\r\n  30,\r\n  0,\r\n  0,\r\n  0,\r\n  100,\r\n  0,\r\n  30,\r\n  0,\r\n  0,\r\n  30,\r\n\r\n  // top rung right\r\n  100,\r\n  0,\r\n  0,\r\n  100,\r\n  30,\r\n  0,\r\n  100,\r\n  30,\r\n  30,\r\n  100,\r\n  0,\r\n  0,\r\n  100,\r\n  30,\r\n  30,\r\n  100,\r\n  0,\r\n  30,\r\n\r\n  // under top rung\r\n  30,\r\n  30,\r\n  0,\r\n  30,\r\n  30,\r\n  30,\r\n  100,\r\n  30,\r\n  30,\r\n  30,\r\n  30,\r\n  0,\r\n  100,\r\n  30,\r\n  30,\r\n  100,\r\n  30,\r\n  0,\r\n\r\n  // between top rung and middle\r\n  30,\r\n  30,\r\n  0,\r\n  30,\r\n  60,\r\n  30,\r\n  30,\r\n  30,\r\n  30,\r\n  30,\r\n  30,\r\n  0,\r\n  30,\r\n  60,\r\n  0,\r\n  30,\r\n  60,\r\n  30,\r\n\r\n  // top of middle rung\r\n  30,\r\n  60,\r\n  0,\r\n  67,\r\n  60,\r\n  30,\r\n  30,\r\n  60,\r\n  30,\r\n  30,\r\n  60,\r\n  0,\r\n  67,\r\n  60,\r\n  0,\r\n  67,\r\n  60,\r\n  30,\r\n\r\n  // right of middle rung\r\n  67,\r\n  60,\r\n  0,\r\n  67,\r\n  90,\r\n  30,\r\n  67,\r\n  60,\r\n  30,\r\n  67,\r\n  60,\r\n  0,\r\n  67,\r\n  90,\r\n  0,\r\n  67,\r\n  90,\r\n  30,\r\n\r\n  // bottom of middle rung.\r\n  30,\r\n  90,\r\n  0,\r\n  30,\r\n  90,\r\n  30,\r\n  67,\r\n  90,\r\n  30,\r\n  30,\r\n  90,\r\n  0,\r\n  67,\r\n  90,\r\n  30,\r\n  67,\r\n  90,\r\n  0,\r\n\r\n  // right of bottom\r\n  30,\r\n  90,\r\n  0,\r\n  30,\r\n  150,\r\n  30,\r\n  30,\r\n  90,\r\n  30,\r\n  30,\r\n  90,\r\n  0,\r\n  30,\r\n  150,\r\n  0,\r\n  30,\r\n  150,\r\n  30,\r\n\r\n  // bottom\r\n  0,\r\n  150,\r\n  0,\r\n  0,\r\n  150,\r\n  30,\r\n  30,\r\n  150,\r\n  30,\r\n  0,\r\n  150,\r\n  0,\r\n  30,\r\n  150,\r\n  30,\r\n  30,\r\n  150,\r\n  0,\r\n\r\n  // left side\r\n  0,\r\n  0,\r\n  0,\r\n  0,\r\n  0,\r\n  30,\r\n  0,\r\n  150,\r\n  30,\r\n  0,\r\n  0,\r\n  0,\r\n  0,\r\n  150,\r\n  30,\r\n  0,\r\n  150,\r\n  0\r\n]);\r\n\r\nfunction setGeometry(gl) {\r\n  gl.bufferData(gl.ARRAY_BUFFER, geometryF, gl.STATIC_DRAW);\r\n}\r\n\r\nexport { setGeometry, geometryF };\r\n","function setColors(gl) {\r\n  gl.bufferData(\r\n    gl.ARRAY_BUFFER,\r\n    new Uint8Array([\r\n      // left column front\r\n      200,\r\n      70,\r\n      120,\r\n      200,\r\n      70,\r\n      120,\r\n      200,\r\n      70,\r\n      120,\r\n      200,\r\n      70,\r\n      120,\r\n      200,\r\n      70,\r\n      120,\r\n      200,\r\n      70,\r\n      120,\r\n\r\n      // top rung front\r\n      200,\r\n      70,\r\n      120,\r\n      200,\r\n      70,\r\n      120,\r\n      200,\r\n      70,\r\n      120,\r\n      200,\r\n      70,\r\n      120,\r\n      200,\r\n      70,\r\n      120,\r\n      200,\r\n      70,\r\n      120,\r\n\r\n      // middle rung front\r\n      200,\r\n      70,\r\n      120,\r\n      200,\r\n      70,\r\n      120,\r\n      200,\r\n      70,\r\n      120,\r\n      200,\r\n      70,\r\n      120,\r\n      200,\r\n      70,\r\n      120,\r\n      200,\r\n      70,\r\n      120,\r\n\r\n      // left column back\r\n      80,\r\n      70,\r\n      200,\r\n      80,\r\n      70,\r\n      200,\r\n      80,\r\n      70,\r\n      200,\r\n      80,\r\n      70,\r\n      200,\r\n      80,\r\n      70,\r\n      200,\r\n      80,\r\n      70,\r\n      200,\r\n\r\n      // top rung back\r\n      80,\r\n      70,\r\n      200,\r\n      80,\r\n      70,\r\n      200,\r\n      80,\r\n      70,\r\n      200,\r\n      80,\r\n      70,\r\n      200,\r\n      80,\r\n      70,\r\n      200,\r\n      80,\r\n      70,\r\n      200,\r\n\r\n      // middle rung back\r\n      80,\r\n      70,\r\n      200,\r\n      80,\r\n      70,\r\n      200,\r\n      80,\r\n      70,\r\n      200,\r\n      80,\r\n      70,\r\n      200,\r\n      80,\r\n      70,\r\n      200,\r\n      80,\r\n      70,\r\n      200,\r\n\r\n      // top\r\n      70,\r\n      200,\r\n      210,\r\n      70,\r\n      200,\r\n      210,\r\n      70,\r\n      200,\r\n      210,\r\n      70,\r\n      200,\r\n      210,\r\n      70,\r\n      200,\r\n      210,\r\n      70,\r\n      200,\r\n      210,\r\n\r\n      // top rung right\r\n      200,\r\n      200,\r\n      70,\r\n      200,\r\n      200,\r\n      70,\r\n      200,\r\n      200,\r\n      70,\r\n      200,\r\n      200,\r\n      70,\r\n      200,\r\n      200,\r\n      70,\r\n      200,\r\n      200,\r\n      70,\r\n\r\n      // under top rung\r\n      210,\r\n      100,\r\n      70,\r\n      210,\r\n      100,\r\n      70,\r\n      210,\r\n      100,\r\n      70,\r\n      210,\r\n      100,\r\n      70,\r\n      210,\r\n      100,\r\n      70,\r\n      210,\r\n      100,\r\n      70,\r\n\r\n      // between top rung and middle\r\n      210,\r\n      160,\r\n      70,\r\n      210,\r\n      160,\r\n      70,\r\n      210,\r\n      160,\r\n      70,\r\n      210,\r\n      160,\r\n      70,\r\n      210,\r\n      160,\r\n      70,\r\n      210,\r\n      160,\r\n      70,\r\n\r\n      // top of middle rung\r\n      70,\r\n      180,\r\n      210,\r\n      70,\r\n      180,\r\n      210,\r\n      70,\r\n      180,\r\n      210,\r\n      70,\r\n      180,\r\n      210,\r\n      70,\r\n      180,\r\n      210,\r\n      70,\r\n      180,\r\n      210,\r\n\r\n      // right of middle rung\r\n      100,\r\n      70,\r\n      210,\r\n      100,\r\n      70,\r\n      210,\r\n      100,\r\n      70,\r\n      210,\r\n      100,\r\n      70,\r\n      210,\r\n      100,\r\n      70,\r\n      210,\r\n      100,\r\n      70,\r\n      210,\r\n\r\n      // bottom of middle rung.\r\n      76,\r\n      210,\r\n      100,\r\n      76,\r\n      210,\r\n      100,\r\n      76,\r\n      210,\r\n      100,\r\n      76,\r\n      210,\r\n      100,\r\n      76,\r\n      210,\r\n      100,\r\n      76,\r\n      210,\r\n      100,\r\n\r\n      // right of bottom\r\n      140,\r\n      210,\r\n      80,\r\n      140,\r\n      210,\r\n      80,\r\n      140,\r\n      210,\r\n      80,\r\n      140,\r\n      210,\r\n      80,\r\n      140,\r\n      210,\r\n      80,\r\n      140,\r\n      210,\r\n      80,\r\n\r\n      // bottom\r\n      90,\r\n      130,\r\n      110,\r\n      90,\r\n      130,\r\n      110,\r\n      90,\r\n      130,\r\n      110,\r\n      90,\r\n      130,\r\n      110,\r\n      90,\r\n      130,\r\n      110,\r\n      90,\r\n      130,\r\n      110,\r\n\r\n      // left side\r\n      160,\r\n      160,\r\n      220,\r\n      160,\r\n      160,\r\n      220,\r\n      160,\r\n      160,\r\n      220,\r\n      160,\r\n      160,\r\n      220,\r\n      160,\r\n      160,\r\n      220,\r\n      160,\r\n      160,\r\n      220\r\n    ]),\r\n    gl.STATIC_DRAW\r\n  );\r\n}\r\n\r\nexport { setColors };\r\n","export function createProgram(\r\n  gl, shaders, opt_attribs, opt_locations, opt_errorCallback) {\r\nconst errFn = opt_errorCallback || error;\r\nconst program = gl.createProgram();\r\nshaders.forEach(function(shader) {\r\n  gl.attachShader(program, shader);\r\n});\r\nif (opt_attribs) {\r\n  opt_attribs.forEach(function(attrib, ndx) {\r\n    gl.bindAttribLocation(\r\n        program,\r\n        opt_locations ? opt_locations[ndx] : ndx,\r\n        attrib);\r\n  });\r\n}\r\ngl.linkProgram(program);\r\n\r\n// Check the link status\r\nconst linked = gl.getProgramParameter(program, gl.LINK_STATUS);\r\nif (!linked) {\r\n    // something went wrong with the link\r\n    const lastError = gl.getProgramInfoLog(program);\r\n    errFn(\"Error in program linking:\" + lastError);\r\n\r\n    gl.deleteProgram(program);\r\n    return null;\r\n}\r\nreturn program;\r\n}\r\n\r\nfunction error(msg) {\r\n  console.error(msg)\r\n}\r\n\r\nexport function makeBuffer(\r\n  gl,\r\n  attributeLocationName,\r\n  program,\r\n  size,\r\n  type,\r\n  normalize,\r\n  stride,\r\n  offset,\r\n  data\r\n) {\r\n  const positionAttributeLocation = gl.getAttribLocation(\r\n    program,\r\n    attributeLocationName\r\n  );\r\n\r\n  const pointsBuffer = gl.createBuffer();\r\n\r\n  gl.enableVertexAttribArray(positionAttributeLocation);\r\n  gl.bindBuffer(gl.ARRAY_BUFFER, pointsBuffer);\r\n\r\n  gl.bufferData(gl.ARRAY_BUFFER, new Float32Array([...data]), gl.STATIC_DRAW);\r\n\r\n  gl.vertexAttribPointer(\r\n    positionAttributeLocation,\r\n    size,\r\n    type,\r\n    normalize,\r\n    stride,\r\n    offset\r\n  );\r\n  const bufferObject = {\r\n    attributeLocation: positionAttributeLocation,\r\n    program: program,\r\n    properties: {\r\n      size,\r\n      type,\r\n      normalize,\r\n      stride,\r\n      offset\r\n    }\r\n  };\r\n\r\n  return bufferObject;\r\n}\r\n  const defaultShaderType = [\r\n    \"VERTEX_SHADER\",\r\n    \"FRAGMENT_SHADER\",\r\n  ];\r\nexport function createProgramFromSources(\r\n    gl, shaderSources, opt_attribs, opt_locations, opt_errorCallback) {\r\n  const shaders = [];\r\n  for (let ii = 0; ii < shaderSources.length; ++ii) {\r\n    shaders.push(loadShader(\r\n        gl, shaderSources[ii], gl[defaultShaderType[ii]], opt_errorCallback));\r\n  }\r\n  return createProgram(gl, shaders, opt_attribs, opt_locations, opt_errorCallback);\r\n}\r\n  function loadShader(gl, shaderSource, shaderType, opt_errorCallback) {\r\n    const errFn = opt_errorCallback || error;\r\n    // Create the shader object\r\n    const shader = gl.createShader(shaderType);\r\n\r\n    // Load the shader source\r\n    gl.shaderSource(shader, shaderSource);\r\n\r\n    // Compile the shader\r\n    gl.compileShader(shader);\r\n\r\n    // Check the compile status\r\n    const compiled = gl.getShaderParameter(shader, gl.COMPILE_STATUS);\r\n    if (!compiled) {\r\n      // Something went wrong during compilation; get the error\r\n      const lastError = gl.getShaderInfoLog(shader);\r\n      errFn(\"*** Error compiling shader '\" + shader + \"':\" + lastError);\r\n      gl.deleteShader(shader);\r\n      return null;\r\n    }\r\n  }","\r\nexport const NUM_PARTICLES = 2000\r\n","import {NUM_PARTICLES} from './vars'\r\n\r\nexport const vertexShaderRectangleSource = `#version 310 es\r\nin vec4 a_position;\r\n\r\nuniform mat4 u_matrix;\r\nuniform float u_fudgeFactor;\r\nuniform vec2 u_resolution;\r\n\r\nout vec4 v_color;\r\nout vec4 v_position;\r\n\r\nvoid main() {\r\n\r\n  vec4 position = u_matrix * a_position;\r\n  float zToDivideBy = 1.;\r\n  v_color = vec4(1,1,1,1.);\r\n  v_position = a_position;\r\n  gl_Position = vec4(position.xy / zToDivideBy, position.zw);\r\n}\r\n\r\n`\r\nexport const fragmentShaderRectangleSource = `#version 310 es\r\nprecision highp float;\r\nin vec4 v_color;\r\nin vec4 v_position;\r\nout vec4 outColor;\r\n\r\nuniform vec2 u_resolution;\r\nuniform sampler2D u_previousFrame;\r\nuniform sampler2D u_currFrame;\r\n\r\nvoid main() {\r\n  vec2 uv = v_position.xy/u_resolution;\r\n\r\n  uv *= 1.0;\r\n  uv.y = 1. - uv.y;\r\n\r\n  outColor = vec4(0,0,0,1);\r\n  vec3 previous =  texture(u_previousFrame,uv).xyz;\r\n  vec3 curr =  texture(u_currFrame,uv).xyz;\r\n\r\n  outColor.xyz += previous*1. + curr*1.0;\r\n}\r\n`;\r\nexport const vertexShaderSource = `#version 310 es\r\n\r\n\r\nin vec4 a_position;\r\n// in vec4 a_color;\r\n\r\n// layout (rgba8, binding = 0) uniform readonly highp image2D u_distTex;\r\n\r\nuniform mat4 u_matrix;\r\nuniform float u_fudgeFactor;\r\n// uniform sampler2D u_distTex;\r\nuniform int u_particleId;\r\nuniform int u_particleCount;\r\nuniform vec2 u_resolution;\r\nuniform vec2 u_positionMouse;\r\n\r\n// layout (std430, binding = 0) buffer SSBO {\r\n//   vec3 data[];\r\n// } ssbo;\r\nstruct Particle {\r\n  vec3 position;\r\n  vec3 velocity;\r\n};\r\nlayout (location = 0) in vec3 particle;\r\nlayout (location = 1) in vec3 particleVelocity;\r\n\r\nout vec4 v_color;\r\n\r\nvoid main() {\r\n  float particleCount = float(u_particleCount);\r\n\r\n  Particle t = Particle(particle,particleVelocity);\r\n\r\n  vec4 position = u_matrix * vec4(0. + t.position.x*u_resolution.x,u_resolution.y-t.position.y*u_resolution.y,1.,1.);\r\n  // vec4 position = u_matrix * vec4(0. + u_positionMouse.x*u_resolution.x,u_resolution.y-t.position.y*u_resolution.y,1.,1.);\r\n  \r\n  float zToDivideBy = 1.;\r\n  gl_PointSize = 4.0;\r\n  v_color = vec4(particleVelocity,1.);\r\n  gl_Position = vec4(position.xy / zToDivideBy, position.zw);\r\n}\r\n`;\r\n\r\nexport const fragmentShaderSource = `#version 310 es\r\n\r\nprecision mediump float;\r\n\r\nin vec4 v_color;\r\n\r\nout vec4 outColor;\r\n\r\n\r\nvoid main() {\r\n  // outColor = v_color;\r\n  vec2 uv = 2.*gl_PointCoord - 1.;\r\n\r\n  float r = 1.;\r\n  outColor = vec4(v_color.x,v_color.y,1,1.) * smoothstep(r, r*0.99, length(uv));\r\n}\r\n`;\r\nexport const computeShaderSource = `#version 310 es\r\n  layout (local_size_x = 1, local_size_y = 1, local_size_z = 1) in;\r\n\r\n  struct Particle {\r\n    vec3 position;\r\n    vec3 velocity;\r\n  };\r\n\r\n  layout (std430, binding = 0) buffer SSBO {\r\n    vec3 position[${NUM_PARTICLES}]; // TODO: make this an import\r\n    vec3 velocity[${NUM_PARTICLES}];\r\n  } ssbo;\r\n\r\n  uniform vec2 u_resolution;\r\n  uniform vec2 u_positionMouse;\r\n  uniform float u_mousePressed;\r\n  uniform int u_particleCount;\r\n  uniform float u_timeElapsed;\r\n  uniform float u_avoidance;\r\n  uniform vec2 u_gravity;\r\n  \r\n\r\n  float r11(float i) {return fract(sin(i*212.12)*124.41);}\r\n  vec3 r13(float i) {return vec3( r11(i), r11(i*2.4), r11(i*1.57));} \r\n\r\n  void main() {\r\n    ivec2 posGlobal = ivec2(gl_GlobalInvocationID.xy);\r\n\r\n    // Particle previous = ssbo.particle[posGlobal.x];\r\n    // Particle previous = Particle(ssbo.position[posGlobal.x], ssbo.velocity[posGlobal.x]);\r\n    Particle previous = Particle(ssbo.position[posGlobal.x], ssbo.velocity[posGlobal.x]);\r\n    Particle next = previous;\r\n\r\n    vec2 positionMouse = u_positionMouse ;\r\n    vec2 directionMouse = normalize(positionMouse - previous.position.xy );\r\n\r\n\r\n    if (u_timeElapsed <=  20.) {\r\n      // ssbo.position[posGlobal.x] = vec3(0.5,0.5,1);\r\n      ssbo.position[posGlobal.x] = r13(float(posGlobal.x) + 1.);\r\n      ssbo.position[posGlobal.x].z = 1.;\r\n      // ssbo.velocity[posGlobal.x] = vec3(0);\r\n    } else {\r\n      // -- bounds -- //\r\n      if (previous.position.x < 0.) {\r\n        previous.velocity.x = -1.*abs(previous.velocity.x);\r\n      }\r\n      if (previous.position.x > 1.){\r\n        previous.velocity.x = 1.*abs(previous.velocity.x);\r\n      }\r\n      if (previous.position.y < 0.) {\r\n        previous.velocity.y = -1.*abs(previous.velocity.y);\r\n      }\r\n      if (previous.position.y > 1.) {\r\n        previous.velocity.y = 1.*abs(previous.velocity.y);\r\n      }\r\n      \r\n      // -- mouse -- //\r\n      if (u_mousePressed == 1.) {\r\n        previous.velocity.x -= directionMouse.x*0.0001;\r\n        previous.velocity.y -= directionMouse.y*0.0003;\r\n      }\r\n\r\n\r\n      \r\n      // -- avoidance -- //\r\n      for (int i = 0; i < u_particleCount; i++) {\r\n        vec3 otherPos = ssbo.position[int(i)];\r\n        vec3 direction = normalize(otherPos - previous.position);\r\n        float dis = length(otherPos - previous.position);\r\n        previous.velocity += direction * exp(-dis*(200. - u_avoidance*190.))*0.0001;\r\n      }\r\n\r\n      // -- vortex -- //\r\n      float frId = 10.*float(posGlobal.x)/float(u_particleCount);\r\n      vec2 vortexPos = vec2(sin(frId + u_timeElapsed*0.001), cos(frId + u_timeElapsed*0.001))*0.5 + 0.5;\r\n      vec2 vortexDir = normalize(vortexPos - previous.position.xy);\r\n      // previous.velocity.xy -= vortexDir*0.0001;\r\n      \r\n\r\n\r\n      \r\n      // -- damping -- //\r\n      previous.velocity *= 0.99;\r\n      // -- gravity -- //\r\n      previous.velocity.xy -= u_gravity*0.0003;\r\n\r\n      next.position -= previous.velocity;\r\n      next.velocity = previous.velocity;\r\n\r\n      // -- bounds -- //\r\n      // if (next.position.y == 0.) {\r\n      //   next.position.y = abs(next.position.y);        \r\n      // }\r\n      // next.position.y = max(next.position.y, 0.);\r\n      // next.position.xy = max(min(next.position.xy, vec2(1.)), vec2(0));\r\n\r\n      ssbo.position[posGlobal.x] = next.position;\r\n      ssbo.velocity[posGlobal.x] = next.velocity;\r\n    }\r\n\r\n  }\r\n\r\n\r\n`;\r\n\r\n"]}